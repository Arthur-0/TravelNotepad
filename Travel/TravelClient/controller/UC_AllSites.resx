<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_add1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAABGdBTUEAALGPC/xhBQAABtRJREFUaEPt
        WWlsVUUUrvu+RRON+y7GJcZ9X364JO7RGvcgakPfvfc92rIJFh4QA+3burGU0ru8vhYpUipYK1aW0CoI
        SokgoGIgLizagopYtK9v/L7pXGyglodp4cXwJZOcmTNz58yZM2fOnJt2CAcLfr//8JDHPM/vrz5aNaU2
        Ql7z9gKvszmkWyJk2G1BzXxNsVIT1enVR0R89taqQG3Hxi++Eg2xhSKs2/GIJ3plYHD0hKBhzsj3WGex
        b9CwXwjqZhZpf3/r2KBuTc8zys5lHQtOD2nWMNKlGaVHhXS7KqBHL2I9rJmPg59LmvOBVxHSnMtZx/ef
        Cxt2DumkkW/Yl1DDFFjs2ibad7RA2xYEN1+BUP3IC+jWvewrJzPsRtKRQdaF5IU91kOSZ9hl4C8nzUWS
        h/FPSJ5uF6OsIo1xp8pxmvVsJ890sNiPSScNaowm0RBbIAVe3dgs+NGIbt8RzCg9A3Rrga/8CvbFRG9R
        cNITMkpPwbifA5nOtayjX25Ys2eShqaPR31r0GPdxHrYsIZg3FzSPDPgbQp6yu9kPajZ41CvVDvwGOcg
        TV6PCOvWQGi3A4OlwGGvU6lYBwwhzXxDzf85zUs194yAd9rVNAnXFA408vTys7m7qnoIPSLisa6Dmb0e
        1O0MaZ9Z1ccp1j7BAw3T+BOlLaI5t6nmvgNdG87FYmWTu0vYMFvpJlW3HsFDz/sB7vbVIiN2smruGwS1
        aRdEDKtlstdubx5ZIbaNrRS/jasUG0bFxKxsJyEXYNhe1T01AM00TILAW8dUii0oC4dHxbyhUbE2NyaF
        /2CoQ5/fHvZMu1QN6Radfh/+XDMLC3xlZ6rm3gdvNWqSGv5pTExM8jmiJKdClOe+Lc1j2Yio1HyJ12wP
        ala+GtYt4MvvwnlYhnGf8myo5t4H7ZXCtUKwxdBwcXZU7GzZLETbNlFvNYiyLEdqu3awI2BCTWrYwQVs
        9WVcw1KbHw1zxNQR00WirVWGA0vmLhHFPlsKPWeINJGlali3gJYHQNuLwoYzHzfrM6q59wGPcQ01vTa3
        QqwfVQHBLFE7uV401jSJ4qyoqBsSlUJP8Vp/0VbVsL0A03mJ36kpqUtUF86VN3PAsB9W7N4HbrFvZuU4
        CQrXPDIqyrMdMQVmUYfDSLNZgwVRCMQYd6she6HAZzfOnlSf4A6xVAXfjUPzsxW790G/ShPZOLrTW+xZ
        KrKc9ojRGf39GyJeZ9E7Re91Co3zEJtQ0wFTmaXYvQ9GbRDq+5ocJ76nwDQbahkCPKq6dwuGqew3IzIn
        jrg+DjqBuP1Bxe4bMNDipF+++Y+2t4+Niak+O46d+ER16xFhzXkSi5+NB8FMlAdUc9+BoSSu7HXlEPIX
        dSM2wQVSYwcrakwKcFU3Y5sT9Neb/DFRYNhxBE6mYu8Tcrxuvo8DWMvQQDX3Pfh0KjTs9upsuwNm8ev+
        XMdhvfxGvkdxlVcxK6Ca+x58gkUMcwvtmxePak598NRDWwGRJg5TTUkh32tdBtMowQ6FSzTndNWc2sCt
        eD8Wuxy36lKmL1RzaqNXMlt8jYS8zn2qyhRBet7Q8pNIF/qi51MzkgFAQ08xn0E6PNA5x82FEMx9uNvN
        fEjXmIIapTnxWYbv78R3RipWcqBAbp6CgH2F8KHVpFUeI+EmWDrzH9Z60p35CqsD/fuzDjoX5QfSBOhd
        TFGQZv4Di2iRDIBBFASVSRyV/xCI8K6SzGTA9JScHA9S1iHEBEzQTFomdHS7HX2eljzd8qOsJa2ExoPU
        fJF1jBke0qwNpAnwfndzg2gfhPpmyQAwJg/f3R2XRDTz+qQSNS7U5HXQykLWuaVdDwSdv2t3NIWuGqGP
        5cJI81HqZp2IoNe+wX2VT/RMPLHrq2R8ZuVpkUzzYlX9b2C617XblIaMG3RrPLZuSkAzb1HNqQ1uEW6v
        RpjGZ+5hOoT9BN0sQ92kvYhKZwVU9YAj7LWnY8flwwG73kF5FKt7MF+Mznw1jJV13czCwHrSOKBHov1H
        xMz3sA7/mul6GcYY4G10A3f1IFhCmkC/r103Cvp5uLkVkgGgfRX6ppOWeQ8+JJpWyjz5hxUL8OKx/ygy
        io6RnbsDPsiX9WjXT0LgCOrSF9NV8YOuL1YHV/pitSA8XJUv7vThXXyx3Y7F6qSlD9et7ZIBgLcD3xws
        acMagCIF5ltxw8p1UuPuL5CkAG0+QgFI0xVCE1FM2o91apW3ImlqmsE+F806bbKriUHzpfTVpLmb6Fcg
        GQCELEG5lTT/NiDCi89z5otvV6wRlXm18YjP/o5zy86pCtowlLOLGobAm9wFpTzkPxn5PzPFNfw/Rlra
        33oPmJ6Pb14JAAAAAElFTkSuQmCC
</value>
  </data>
</root>